// Generated by Dagger (https://dagger.dev).
package kr.ac.uc.test_2025_05_19_k.viewmodel;

import androidx.lifecycle.SavedStateHandle;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kr.ac.uc.test_2025_05_19_k.repository.GroupRepository;
import kr.ac.uc.test_2025_05_19_k.repository.InterestRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GroupEditViewModel_Factory implements Factory<GroupEditViewModel> {
  private final Provider<GroupRepository> groupRepositoryProvider;

  private final Provider<InterestRepository> interestRepositoryProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public GroupEditViewModel_Factory(Provider<GroupRepository> groupRepositoryProvider,
      Provider<InterestRepository> interestRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.groupRepositoryProvider = groupRepositoryProvider;
    this.interestRepositoryProvider = interestRepositoryProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public GroupEditViewModel get() {
    return newInstance(groupRepositoryProvider.get(), interestRepositoryProvider.get(), savedStateHandleProvider.get());
  }

  public static GroupEditViewModel_Factory create(Provider<GroupRepository> groupRepositoryProvider,
      Provider<InterestRepository> interestRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new GroupEditViewModel_Factory(groupRepositoryProvider, interestRepositoryProvider, savedStateHandleProvider);
  }

  public static GroupEditViewModel newInstance(GroupRepository groupRepository,
      InterestRepository interestRepository, SavedStateHandle savedStateHandle) {
    return new GroupEditViewModel(groupRepository, interestRepository, savedStateHandle);
  }
}
