// Generated by Dagger (https://dagger.dev).
package kr.ac.uc.test_2025_05_19_k.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kr.ac.uc.test_2025_05_19_k.network.api.UserApi;
import kr.ac.uc.test_2025_05_19_k.network.api.UserApiService;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UserRepository_Factory implements Factory<UserRepository> {
  private final Provider<UserApi> userApiProvider;

  private final Provider<UserApiService> userApiServiceProvider;

  public UserRepository_Factory(Provider<UserApi> userApiProvider,
      Provider<UserApiService> userApiServiceProvider) {
    this.userApiProvider = userApiProvider;
    this.userApiServiceProvider = userApiServiceProvider;
  }

  @Override
  public UserRepository get() {
    return newInstance(userApiProvider.get(), userApiServiceProvider.get());
  }

  public static UserRepository_Factory create(Provider<UserApi> userApiProvider,
      Provider<UserApiService> userApiServiceProvider) {
    return new UserRepository_Factory(userApiProvider, userApiServiceProvider);
  }

  public static UserRepository newInstance(UserApi userApi, UserApiService userApiService) {
    return new UserRepository(userApi, userApiService);
  }
}
