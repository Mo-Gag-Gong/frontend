// Generated by Dagger (https://dagger.dev).
package kr.ac.uc.test_2025_05_19_k;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;
import kr.ac.uc.test_2025_05_19_k.data.local.UserPreference;
import kr.ac.uc.test_2025_05_19_k.repository.TokenManager;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<UserPreference> userPreferenceProvider;

  private final Provider<TokenManager> tokenManagerProvider;

  public MainActivity_MembersInjector(Provider<UserPreference> userPreferenceProvider,
      Provider<TokenManager> tokenManagerProvider) {
    this.userPreferenceProvider = userPreferenceProvider;
    this.tokenManagerProvider = tokenManagerProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<UserPreference> userPreferenceProvider,
      Provider<TokenManager> tokenManagerProvider) {
    return new MainActivity_MembersInjector(userPreferenceProvider, tokenManagerProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectUserPreference(instance, userPreferenceProvider.get());
    injectTokenManager(instance, tokenManagerProvider.get());
  }

  @InjectedFieldSignature("kr.ac.uc.test_2025_05_19_k.MainActivity.userPreference")
  public static void injectUserPreference(MainActivity instance, UserPreference userPreference) {
    instance.userPreference = userPreference;
  }

  @InjectedFieldSignature("kr.ac.uc.test_2025_05_19_k.MainActivity.tokenManager")
  public static void injectTokenManager(MainActivity instance, TokenManager tokenManager) {
    instance.tokenManager = tokenManager;
  }
}
