// Generated by Dagger (https://dagger.dev).
package kr.ac.uc.test_2025_05_19_k.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kr.ac.uc.test_2025_05_19_k.repository.TokenManager;
import kr.ac.uc.test_2025_05_19_k.repository.UserRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class UserProfileViewModel_Factory implements Factory<UserProfileViewModel> {
  private final Provider<UserRepository> userRepositoryProvider;

  private final Provider<TokenManager> tokenManagerProvider;

  public UserProfileViewModel_Factory(Provider<UserRepository> userRepositoryProvider,
      Provider<TokenManager> tokenManagerProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
    this.tokenManagerProvider = tokenManagerProvider;
  }

  @Override
  public UserProfileViewModel get() {
    return newInstance(userRepositoryProvider.get(), tokenManagerProvider.get());
  }

  public static UserProfileViewModel_Factory create(Provider<UserRepository> userRepositoryProvider,
      Provider<TokenManager> tokenManagerProvider) {
    return new UserProfileViewModel_Factory(userRepositoryProvider, tokenManagerProvider);
  }

  public static UserProfileViewModel newInstance(UserRepository userRepository,
      TokenManager tokenManager) {
    return new UserProfileViewModel(userRepository, tokenManager);
  }
}
