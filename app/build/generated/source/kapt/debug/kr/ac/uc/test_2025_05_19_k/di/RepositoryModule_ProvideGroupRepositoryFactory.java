// Generated by Dagger (https://dagger.dev).
package kr.ac.uc.test_2025_05_19_k.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kr.ac.uc.test_2025_05_19_k.network.api.GroupApi;
import kr.ac.uc.test_2025_05_19_k.repository.GroupRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryModule_ProvideGroupRepositoryFactory implements Factory<GroupRepository> {
  private final Provider<GroupApi> apiProvider;

  public RepositoryModule_ProvideGroupRepositoryFactory(Provider<GroupApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public GroupRepository get() {
    return provideGroupRepository(apiProvider.get());
  }

  public static RepositoryModule_ProvideGroupRepositoryFactory create(
      Provider<GroupApi> apiProvider) {
    return new RepositoryModule_ProvideGroupRepositoryFactory(apiProvider);
  }

  public static GroupRepository provideGroupRepository(GroupApi api) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideGroupRepository(api));
  }
}
