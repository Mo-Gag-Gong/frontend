// Generated by Dagger (https://dagger.dev).
package kr.ac.uc.test_2025_05_19_k.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kr.ac.uc.test_2025_05_19_k.network.api.UserApiService;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkModule_ProvideUserApiServiceFactory implements Factory<UserApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideUserApiServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public UserApiService get() {
    return provideUserApiService(retrofitProvider.get());
  }

  public static NetworkModule_ProvideUserApiServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideUserApiServiceFactory(retrofitProvider);
  }

  public static UserApiService provideUserApiService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideUserApiService(retrofit));
  }
}
