// Generated by Dagger (https://dagger.dev).
package kr.ac.uc.test_2025_05_19_k.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kr.ac.uc.test_2025_05_19_k.network.api.UserApi;
import kr.ac.uc.test_2025_05_19_k.repository.UserRepository;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryModule_ProvideUserRepositoryFactory implements Factory<UserRepository> {
  private final Provider<UserApi> apiProvider;

  public RepositoryModule_ProvideUserRepositoryFactory(Provider<UserApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public UserRepository get() {
    return provideUserRepository(apiProvider.get());
  }

  public static RepositoryModule_ProvideUserRepositoryFactory create(
      Provider<UserApi> apiProvider) {
    return new RepositoryModule_ProvideUserRepositoryFactory(apiProvider);
  }

  public static UserRepository provideUserRepository(UserApi api) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideUserRepository(api));
  }
}
